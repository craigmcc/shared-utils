{"id":45,"name":"Validators","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Standard (across applications) validation methods that can be used both by\nbackend database interactions and frontend UI components.  In all cases, a\n\"true\" return value indicates that the proposed value is valid, while \"false\"\nmeans that it is not.  If a field is required, that must be validated separately."}]},"children":[],"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":11,"character":6,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L11"}],"type":{"type":"reflection","declaration":{"id":46,"name":"Validators","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":47,"name":"date","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":19,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L19"}],"signatures":[{"id":48,"name":"date","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a date string (YYYY-MM-DD format)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the date string is valid or empty"}]}]},"parameters":[{"id":49,"name":"date","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Date string to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Date string to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"date.date"},"text":{"comment":"<p>Validate a date string (YYYY-MM-DD format).</p>\n<h5>Returns:</h5><p>True if the date string is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":19,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L19"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"date"},"text":{},"parentId":45},{"id":50,"name":"email","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":34,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L34"}],"signatures":[{"id":51,"name":"email","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate an email address against an appropriate pattern."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the email address is valid or empty"}]}]},"parameters":[{"id":52,"name":"email","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Email address to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Email address to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"email.email"},"text":{"comment":"<p>Validate an email address against an appropriate pattern.</p>\n<h5>Returns:</h5><p>True if the email address is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":34,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L34"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"email"},"text":{},"parentId":45},{"id":53,"name":"month","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":48,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L48"}],"signatures":[{"id":54,"name":"month","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a month string (YYYY-MM format)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the month string is valid or empty"}]}]},"parameters":[{"id":55,"name":"month","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Month string to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Month string to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"month.month"},"text":{"comment":"<p>Validate a month string (YYYY-MM format).</p>\n<h5>Returns:</h5><p>True if the month string is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":48,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L48"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"month"},"text":{},"parentId":45},{"id":56,"name":"number","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":63,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L63"}],"signatures":[{"id":57,"name":"number","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a number string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the number string is valid or empty"}]}]},"parameters":[{"id":58,"name":"number","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Number string to be validated"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"text":{"comment":"<p>Number string to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"number.number"},"text":{"comment":"<p>Validate a number string.</p>\n<h5>Returns:</h5><p>True if the number string is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":63,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L63"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"number"},"text":{},"parentId":45},{"id":59,"name":"phone","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":77,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L77"}],"signatures":[{"id":60,"name":"phone","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a US phone number (999-999-9999)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the phone number is valid or empty"}]}]},"parameters":[{"id":61,"name":"phone","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Phone number to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Phone number to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"phone.phone"},"text":{"comment":"<p>Validate a US phone number (999-999-9999).</p>\n<h5>Returns:</h5><p>True if the phone number is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":77,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L77"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"phone"},"text":{},"parentId":45},{"id":62,"name":"state","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":90,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L90"}],"signatures":[{"id":63,"name":"state","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a US state abbreviation."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the state abbreviation is valid or empty"}]}]},"parameters":[{"id":64,"name":"state","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"State abbreviation to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>State abbreviation to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"state.state"},"text":{"comment":"<p>Validate a US state abbreviation.</p>\n<h5>Returns:</h5><p>True if the state abbreviation is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":90,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L90"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"state"},"text":{},"parentId":45},{"id":65,"name":"time","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":104,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L104"}],"signatures":[{"id":66,"name":"time","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a time string (99:99 or 99:99:99)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the time string is valid or empty"}]}]},"parameters":[{"id":67,"name":"time","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Time string to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Time string to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"time.time"},"text":{"comment":"<p>Validate a time string (99:99 or 99:99:99).</p>\n<h5>Returns:</h5><p>True if the time string is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":104,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L104"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"time"},"text":{},"parentId":45},{"id":68,"name":"zipCode","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":119,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L119"}],"signatures":[{"id":69,"name":"zipCode","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Validate a US zip code (99999 or 99999-9999)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"True if the zip code is valid or empty"}]}]},"parameters":[{"id":70,"name":"zipCode","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Zip code to be validated"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Zip code to be validated</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Variable.Validators","hash":"zipCode.zipCode"},"text":{"comment":"<p>Validate a US zip code (99999 or 99999-9999).</p>\n<h5>Returns:</h5><p>True if the zip code is valid or empty</p>\n"},"sources":[{"fileName":"Validators/Validators.ts","fullFileName":"/Users/craigmcc/Git.Craigmcc/shared-utils/src/Validators/Validators.ts","line":119,"character":4,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L119"}],"parentId":45}],"is":{"declaration":true},"location":{"query":"Variable.Validators","hash":"zipCode"},"text":{},"parentId":45}],"groups":[{"title":"Methods","children":[47,50,53,56,59,62,65,68]}],"sources":[{"fileName":"Validators/Validators.ts","line":11,"character":19,"url":"https://github.com/craigmcc/shared-utils/blob/8e69722/src/Validators/Validators.ts#L11"}],"location":{"query":"Variable.Validators","hash":""}}},"defaultValue":"...","is":{"declaration":true},"location":{"query":"Variable.Validators","hash":""},"text":{"comment":"<p>Standard (across applications) validation methods that can be used both by\nbackend database interactions and frontend UI components.  In all cases, a\n&quot;true&quot; return value indicates that the proposed value is valid, while &quot;false&quot;\nmeans that it is not.  If a field is required, that must be validated separately.</p>\n"}}
